import pandas as pd
df = pd.read_csv("iris.csv")

# Prepare X and Y
X = df.values[:,:-1]
Y = df.values[:,-1]

df.head()
df
X_standard = X - X.mean()
X_standard
type(X_standard)
Y_standard = Y
Y_standard
type(Y_standard)
cov = np.cov(X.T)   # .T b/c numpy wants varibles along rows rather than down columns?
print("covariance matrix =\n",cov)
from numpy import linalg as LA
lambdas, vs = LA.eig(cov)
lambdas
vs
lambdas
#sort the eigenvalues in descending order
sorted_index = np.argsort(lambdas)[::-1]
sorted_index
sorted_eigenvalue = lambdas[sorted_index]
sorted_eigenvalue
sorted_eigenvectors = vs[:,sorted_index]
sorted_eigenvectors

n_components = 2 #you can select any number of components.
eigenvector_subset = sorted_eigenvectors[:,0:n_components]
eigenvector_subset
#Transform the data
X_reduced = np.dot(eigenvector_subset.transpose(),X_standard.transpose()).transpose()
print("Information/Variance in PC1",(sorted_eigenvalue[0]/(sorted_eigenvalue[0]+sorted_eigenvalue[1]))*100)
X_reduced
import matplotlib.pyplot as plt
plt.xlabel('Principal Component - 1',fontsize=20)
plt.ylabel('Principal Component - 2',fontsize=20)
plt.scatter(X_reduced[:,0:1],X_reduced[:,-1],c=Y)
plt.show()
